# Generated by Django 3.2.18 on 2023-03-16 22:34

import cloudinary.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergen', models.CharField(choices=[(0, 'None'), (1, 'Vegan'), (2, 'Vegetarian'), (3, 'Gluten-free'), (4, 'Contains nuts'), (5, 'Dairy-free')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MainIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_ingredient_name', models.CharField(choices=[(0, 'Chicken'), (1, 'Noodles'), (2, 'Fish'), (3, 'Beef'), (4, 'Fruit'), (5, 'Pork'), (6, 'Rice'), (7, 'Seafood'), (8, 'Potato'), (9, 'Bread'), (10, 'Vegetables'), (11, 'Eggs'), (12, 'Oats')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(max_length=150, unique=True)),
                ('type', models.IntegerField(choices=[(0, 'Breakfast'), (1, 'Lunch'), (2, 'Dinner'), (3, 'Snack')])),
                ('ingredients', models.TextField(default='')),
                ('method', models.TextField()),
                ('prep_time', models.DurationField(choices=[(datetime.timedelta(seconds=300), '5 mins'), (datetime.timedelta(seconds=600), '10 mins'), (datetime.timedelta(seconds=900), '15 mins'), (datetime.timedelta(seconds=1200), '20 mins'), (datetime.timedelta(seconds=1500), '25 mins'), (datetime.timedelta(seconds=1800), '30 mins'), (datetime.timedelta(seconds=2100), '35 mins'), (datetime.timedelta(seconds=2400), '40 mins'), (datetime.timedelta(seconds=2700), '45 mins'), (datetime.timedelta(seconds=3000), '50 mins'), (datetime.timedelta(seconds=3300), '55mins'), (datetime.timedelta(seconds=3600), '1 hour')], default=(datetime.timedelta(seconds=900), '15 mins'))),
                ('cooking_time', models.DurationField(choices=[(datetime.timedelta(seconds=300), '5 mins'), (datetime.timedelta(seconds=600), '10 mins'), (datetime.timedelta(seconds=900), '15 mins'), (datetime.timedelta(seconds=1200), '20 mins'), (datetime.timedelta(seconds=1500), '25 mins'), (datetime.timedelta(seconds=1800), '30 mins'), (datetime.timedelta(seconds=2100), '35 mins'), (datetime.timedelta(seconds=2400), '40 mins'), (datetime.timedelta(seconds=2700), '45 mins'), (datetime.timedelta(seconds=3000), '50 mins'), (datetime.timedelta(seconds=3300), '55mins'), (datetime.timedelta(seconds=3600), '1 hour')], default=(datetime.timedelta(seconds=1800), '30 mins'))),
                ('serving_size', models.IntegerField()),
                ('calories_per_serving', models.IntegerField()),
                ('difficulty', models.IntegerField(choices=[(0, 'Easy-peasy'), (1, 'I know cooking'), (2, 'Up for a challenge'), (3, 'Battle hardened')])),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('featured_image', cloudinary.models.CloudinaryField(default='placeholder', max_length=255, verbose_name='image')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Published')], default=0)),
                ('allergens', models.ManyToManyField(choices=[(0, 'None'), (1, 'Vegan'), (2, 'Vegetarian'), (3, 'Gluten-free'), (4, 'Contains nuts'), (5, 'Dairy-free')], to='recipes.Allergens')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_posts', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='recipe_likes', to=settings.AUTH_USER_MODEL)),
                ('main_ingredient', models.ManyToManyField(choices=[(0, 'Chicken'), (1, 'Noodles'), (2, 'Fish'), (3, 'Beef'), (4, 'Fruit'), (5, 'Pork'), (6, 'Rice'), (7, 'Seafood'), (8, 'Potato'), (9, 'Bread'), (10, 'Vegetables'), (11, 'Eggs'), (12, 'Oats')], to='recipes.MainIngredient')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='recipes.recipe')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
    ]
